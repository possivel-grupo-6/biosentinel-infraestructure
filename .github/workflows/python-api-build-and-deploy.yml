# Precisa linkar o repo do codígo com o esta pipe 
# Caso queiram é possivel deixar automatico
# No codigo tambem é nescessario o txt de requirements que contem todas as dependencias a serem instaladas que não são padrão do python
# Precisa do arquivo de dockerfile no repo do código
# Precisa ter conta no dockerhub

name: 'Python api build and deploy in aws ec2 docker'

on:
  push:
    branches:
      - none
  
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      PACKAGE_NAME: SensorUmidadeTemperatura
      DOCKERHUB_IMAGE: simulator-humidity

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install -r $PACKAGE_NAME/requirements.txt
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        file: $PACKAGE_NAME/dockerfile
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_IMAGE:latest
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - id: deploy

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_IMAGE:latest
          docker stop $DOCKERHUB_IMAGE || true
          docker rm $DOCKERHUB_IMAGE || true
          docker run -d --name $DOCKERHUB_IMAGE -p 80:80 ${{ secrets.DOCKER_USERNAME }}/$DOCKERHUB_IMAGE:latest
        EOF
        
